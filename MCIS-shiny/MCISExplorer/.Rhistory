departure_hour = hour(departure_datetime)) |>
ggplot(aes(x = request_hour)) +
geom_histogram() +
facet_wrap(~language_need_met)
lang$client_language
lang |>
ggplot(aes(x = client_language))
lang |>
ggplot(aes(x = client_language)) +
geom_bar()
lang |>
ggplot(aes(x = client_language)) +
geom_bar() +
xlab('') +
coord_flip() +
facet_wrap(~language_need_met)
d$le_scene
d |> count(le_scene)
d |>
filter(!is.na(le_scene)) |>
ggplot(aes(x = geo_designation)) +
geom_bar() +
xlab('') +
facet_wrap(~le_scene)
d |>
filter(!is.na(le_scene) & !is.na(geo_designation)) |>
ggplot(aes(x = geo_designation)) +
geom_bar() +
xlab('') +
facet_wrap(~le_scene)
d |>
filter(!is.na(reason_for_dispatch1) & !is.na(le_scene)) |>
ggplot(aes(x = reason_for_dispatch1)) +
geom_bar() +
xlab('') +
coord_flip() =
facet_wrap(~le_scene)
d |>
filter(!is.na(reason_for_dispatch1) & !is.na(le_scene)) |>
ggplot(aes(x = reason_for_dispatch1)) +
geom_bar() +
xlab('') +
coord_flip() +
facet_wrap(~le_scene)
ref_ss
ref_ss |>
ggplot(aes(x = idd_status)) +
geom_bar() +
xlab('')
ref_ss |>
filter(!is.na(idd_status)) |>
ggplot(aes(x = idd_status)) +
geom_bar() +
xlab('') +
facet_wrap(~ref_stabilization_services)
ref_ss |>
filter(!is.na(idd_status)) |>
ggplot(aes(x = idd_status)) +
geom_bar() +
xlab('') +
facet_wrap(~ref_stabilization_services) +
ggtitle("Referral to SS by IDD Status")
ref_ss |>
filter(!is.na(language_need_met)) |>
ggplot(aes(x = language_need_met)) +
geom_bar() +
xlab('') +
facet_wrap(~ref_stabilization_services) +
ggtitle("Referral to SS by Language Need Met")
ref_ss |>
filter(!is.na(language_need_met) & language_need_met != "N/A") |>
ggplot(aes(x = language_need_met)) +
geom_bar() +
xlab('') +
facet_wrap(~ref_stabilization_services) +
ggtitle("Referral to SS by Language Need Met")
d |> names()
d$dispatch_location
d |>
filter(!is.na(custody) & !is.na(dispatch_location)) |>
ggplot(aes(x = custody)) +
geom_bar() +
coord_flip() +
xlab('') +
facet_wrap(~dispatch_location) +
ggtitle("Custody Status by Dispatch Location")
d |>
filter(!is.na(custody) & !is.na(dispatch_location)) |>
ggplot(aes(x = dispatch_location)) +
geom_bar() +
coord_flip() +
xlab('') +
facet_wrap(~custody) +
ggtitle("Custody Status by Dispatch Location")
d$le_scene
d |> count(le_scene)
le_inv <- d |>
filter(!is.na(le_scene))
le_inv
le_inv |> names()
le_inv |>
ggplot(aes(x = age)) +
geom_histogram()
le_inv |>
ggplot(aes(x = age)) +
geom_histogram() +
facet_wrap(~le_scene) +
ggtitle("Demographic: Age")
le_inv |>
ggplot(aes(x = age)) +
geom_histogram() +
facet_wrap(~le_scene) +
ggtitle("Law Enforcement Involvement x Age")
le_inv |>
ggplot(aes(x = age)) +
geom_histogram() +
facet_wrap(~le_scene) +
ggtitle("Law Enforcement Involved x Age")
le_inv |>
ggplot(aes(x = gender)) +
geom_bar()
le_inv |>
filter(!is.na(gender)) |>
ggplot(aes(x = gender)) +
geom_bar() +
coord_flip() +
facet_wrap(~le_scene) +
ggtitle("Law Enforcement Involved x Gender")
le_inv |>
filter(!is.na(sexual_orientation)) |>
ggplot(aes(x = sexual_orientation)) +
geom_bar() +
coord_flip() +
facet_wrap(~le_scene) +
ggtitle("Law Enforcement Involved x Sexual Orientation")
le_inv |>
filter(!is.na(race_ethnicity1)) |>
ggplot(aes(x = race_ethnicity1)) +
geom_bar() +
coord_flip() +
facet_wrap(~le_scene) +
ggtitle("Law Enforcement Involved x Primary Race/Ethnicity")
le_inv |>
filter(!is.na(living_situation)) |>
ggplot(aes(x = living_situation)) +
geom_bar() +
coord_flip() +
facet_wrap(~le_scene) +
ggtitle("Law Enforcement Involved x Living Situation")
le_inv |>
filter(!is.na(primary_insurance)) |>
ggplot(aes(x = primary_insurance)) +
geom_bar() +
coord_flip() +
facet_wrap(~le_scene) +
ggtitle("Law Enforcement Involved x Primary Insurance")
lang |>
filter(!is.na(geo_designation)) |>
ggplot(aes(x = geo_designation)) +
geom_bar() +
xlab('') +
facet_wrap(~language_need_met)
lang |>
filter(!is.na(geo_designation)) |>
ggplot(aes(x = geo_designation)) +
geom_bar() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Geographical Designation")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime)) |>
ggplot(aes(x = request_hour)) +
geom_histogram() +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Hour of Dispatch REQUEST")
lang |>
ggplot(aes(x = client_language)) +
geom_bar() +
xlab('') +
coord_flip() +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Preferred Language")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime)) |>
ggplot(aes(x = dispatch_datetime)) +
geom_bar() +
xlab('') +
coord_flip() +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch RESPONSE")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime)) |>
ggplot(aes(x = dispatch_datetime)) +
geom_bar()
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime)) |>
ggplot(aes(x = dispatch_datetime)) +
geom_histogram() +
xlab('') +
coord_flip() +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch RESPONSE")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime)) |>
ggplot(aes(x = dispatch_hour)) +
geom_histogram() +
xlab('') +
coord_flip() +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch RESPONSE")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime)) |>
ggplot(aes(x = dispatch_hour)) +
geom_histogram() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch RESPONSE")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime),
dispatch_day = day(dispatch_datetime)) |>
ggplot(aes(x = dispatch_day)) +
geom_histogram() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch DAY")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime),
dispatch_day = day(dispatch_datetime)) |>
ggplot(aes(x = dispatch_day)) +
geom_bar() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch DAY")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime),
dispatch_day = week(dispatch_datetime)) |>
ggplot(aes(x = dispatch_day)) +
geom_bar() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch DAY (of the month)")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime),
dispatch_day = wday(dispatch_datetime)) |>
ggplot(aes(x = dispatch_day)) +
geom_bar() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch DAY (of the month)")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime),
dispatch_day = day(dispatch_datetime)) |>
ggplot(aes(x = dispatch_day)) +
geom_bar() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch DAY (of the month)")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime),
dispatch_day = wday(dispatch_datetime)) |>
ggplot(aes(x = dispatch_day)) +
geom_bar() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch DAY (of the week)")
?wday
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime),
dispatch_day = wday(dispatch_datetime)) |>
ggplot(aes(x = dispatch_day, label = T)) +
geom_bar() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch DAY (of the week)")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime),
dispatch_day = wday(dispatch_datetime, label = T)) |>
ggplot(aes(x = dispatch_day)) +
geom_bar() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch DAY (of the week)")
lang |>
mutate(request_hour = hour(request_datetime),
dispatch_hour = hour(dispatch_datetime),
arrival_hour = hour(arrival_datetime),
engagement_hour = hour(engagement_datetime),
departure_hour = hour(departure_datetime),
dispatch_day = wday(dispatch_datetime, label = T)) |>
filter(!is.na(dispatch_day)) |>
ggplot(aes(x = dispatch_day)) +
geom_bar() +
xlab('') +
facet_wrap(~language_need_met) +
ggtitle("Language Need Met x Dispatch DAY (of the week)")
ref_ss
ref_ss |>
ggplot(aes(x = age)) +
geom_histogram() +
facet_wrap(~le_scene) +
ggtitle("No to Stabilization Referral x Age")
ref_ss |>
ggplot(aes(x = age)) +
geom_histogram() +
ggtitle("No to Stabilization Referral x Age")
ref_ss |>
ggplot(aes(x = gender)) +
geom_bar() +
ggtitle("Gender of children not referred to SS")
ref_ss |>
filter(!is.na(gender)) |>
ggplot(aes(x = gender)) +
geom_bar() +
ggtitle("Gender of children not referred to SS")
ref_ss |>
filter(!is.na(sexual_orientation)) |>
ggplot(aes(x = sexual_orientation)) +
geom_bar() +
ggtitle("Sexual orientation of children not referred to SS")
ref_ss |>
filter(!is.na(sexual_orientation)) |>
ggplot(aes(x = sexual_orientation)) +
geom_bar() +
coord_flip() +
ggtitle("Sexual orientation of children not referred to SS")
ref_ss |>
filter(!is.na(sexual_orientation)) |>
ggplot(aes(x = sexual_orientation)) +
geom_bar() +
xlab('') +
coord_flip() +
ggtitle("Sexual orientation of children not referred to SS")
ref_ss |>
filter(!is.na(race_ethnicity1)) |>
ggplot(aes(x = race_ethnicity1)) +
geom_bar() +
xlab('') +
coord_flip() +
ggtitle("Primary Race/Ethnicity of children not referred to SS")
ref_ss |>
filter(!is.na(living_situation)) |>
ggplot(aes(x = living_situation)) +
geom_bar() +
xlab('') +
coord_flip() +
ggtitle("Living Situation of children not referred to SS")
ref_ss |>
filter(!is.na(primary_insurance)) |>
ggplot(aes(x = primary_insurance)) +
geom_bar() +
xlab('') +
coord_flip() +
ggtitle("Primary Insurance of children not referred to SS")
ss_ref <- d |>
select(ref_stabilization_services, enr_stabilization_services) |>
filter(ref_stabilization_services == "Yes")
ss_ref
ss_counts
ss_n
ss_counts |>
mutate(pct = round(n/sum(n), 2)) |>
ggplot(aes(x = enr_stabilization_services, y = n)) +
geom_col() +
xlab('') +
ylab('') +
coord_flip() +
ggtitle(str_glue("SS referrals that were also enrolled in SS (Total = {ss_n})"))
ss_counts |>
mutate(pct = round(n/sum(n), 2)) |>
filter(!is.na(enr_stabilization_services)) |>
ggplot(aes(x = enr_stabilization_services, y = n)) +
geom_col() +
xlab('') +
ylab('') +
coord_flip() +
ggtitle(str_glue("SS referrals that were also enrolled in SS (Total = {ss_n})"))
ss_counts |>
mutate(pct = round(n/sum(n), 2)) |>
filter(!is.na(enr_stabilization_services) & enr_stabilization_services != "Total") |>
ggplot(aes(x = enr_stabilization_services, y = n)) +
geom_col() +
xlab('') +
ylab('') +
coord_flip() +
ggtitle(str_glue("SS referrals that were also enrolled in SS (Total = {ss_n})"))
ss_counts |>
mutate(pct = round(n/sum(n), 2)) |>
filter(enr_stabilization_services != "Total") |>
ggplot(aes(x = enr_stabilization_services, y = n)) +
geom_col() +
xlab('') +
ylab('') +
coord_flip() +
ggtitle(str_glue("SS referrals that were also enrolled in SS (Total = {ss_n})"))
ss_counts |>
mutate(pct = round(n/sum(n), 2)) |>
filter(enr_stabilization_services != "Total") |>
ggplot(aes(x = enr_stabilization_services, y = n)) +
geom_col() +
xlab('') +
ylab('') +
coord_flip() +
ggtitle(str_glue("SS referrals that were also enrolled in SS (Total = {ss_n})"))
ss_counts |>
mutate(pct = round(n/sum(n), 2)) |>
#filter(enr_stabilization_services != "Total") |>
ggplot(aes(x = enr_stabilization_services, y = n)) +
geom_col() +
xlab('') +
ylab('') +
coord_flip() +
ggtitle(str_glue("SS referrals that were also enrolled in SS (Total = {ss_n})"))
ss_counts |>
mutate(pct = round(n/sum(n), 2)) |>
filter(enr_stabilization_services != "Total") |>
ggplot(aes(x = enr_stabilization_services, y = n)) +
geom_col() +
xlab('') +
ylab('') +
coord_flip() +
ggtitle(str_glue("SS referrals that were also enrolled in SS (Total = {ss_n})"))
file_name <- "~/OneDrive - Oregon Health & Science University/MCIS-MCSS-data/2023/MCIS-shiny/MCISExplorer/2023_Q2Q3.csv"
if(file.exists(file_name)){
r <- read_csv("2023_Q2Q3.csv")
} else {
redcap_url <- "https://octri.ohsu.edu/redcap/api/"
mcis_token <- read_csv("~/Desktop/MCIS_MCSS/RCtok.csv") |> filter(project == "mcis")
rcon <- redcapAPI::redcapConnection(url=redcap_url, token=mcis_token$token[1])
r <- tibble(redcapAPI::exportRecordsTyped(rcon, batch_size = 1000))
}
library(shiny)
library(tidyverse)
library(reactable)
library(glue)
library(gt)
library(maps)
library(mapdata)
library(sp)
library(mapproj)
library(zipcodeR)
library(sf)
file_name <- "~/OneDrive - Oregon Health & Science University/MCIS-MCSS-data/2023/MCIS-shiny/MCISExplorer/2023_Q2Q3.csv"
if(file.exists(file_name)){
r <- read_csv("2023_Q2Q3.csv")
} else {
redcap_url <- "https://octri.ohsu.edu/redcap/api/"
mcis_token <- read_csv("~/Desktop/MCIS_MCSS/RCtok.csv") |> filter(project == "mcis")
rcon <- redcapAPI::redcapConnection(url=redcap_url, token=mcis_token$token[1])
r <- tibble(redcapAPI::exportRecordsTyped(rcon, batch_size = 1000))
}
factor_choices <- unique(read_csv("../../a-data-template.csv")[,1]) |> pull()
factor_choices
runApp()
runApp()
file_name <- "~/OneDrive - Oregon Health & Science University/MCIS-MCSS-data/2023/2023_Q2-Q4_Tableau Data.xlsx"
readxl::read_xlsx(file_name)
